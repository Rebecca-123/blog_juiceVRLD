{
  
    
        "post0": {
            "title": "Iteration with 2D Array",
            "content": "Change or add data to the 2D arrays . Apple 1 . /** * Class for apples: a 2D array of apples * As well as method to print the Poem */ class AppleLoop { String [][] apples; /** * Constructor initializes a 2D array of apples */ public AppleLoop() { //Storing Data in 2D arrays apples = new String[][]{ //Apple 0 { &quot; ,--./,-. &quot;, //[0][0] &quot; / | &quot;, //[0][1] &quot; | | &quot;, //[0][2] &quot; | / &quot;, //[0][3] &quot; `._,._,&#39; &quot; //[0][4] }, //Apple 1 { &quot; ,--./,-. &quot;, //[1][0] &quot; / # | &quot;, //[1][1] &quot; | | &quot;, //[1][2] &quot; | / &quot;, //[1][3] &quot; `._,._,&#39; &quot; //[1][4] }, //Apple 2 { &quot; ,--./,-. &quot;, &quot; / # | &quot;, &quot; | @ | &quot;, &quot; | / &quot;, &quot; `._,._,&#39; &quot; }, //Apple 3 { &quot; ,--|,-(~) &quot;, //[3][0] &quot; / # )=) &quot;, &quot; ( (_/ ) &quot;, &quot; | / &quot;, &quot; `._,._,&#39; &quot; }, //Apple 4 { &quot; ,--./,-. &quot;, //[4][0] &quot; /,-._.--~| &quot;, &quot; __} {__ &quot;, &quot; |`-._,-`-, &quot;, &quot; `._,._,&#39; &quot; }, }; } public void printPoem() { System.out.println(); System.out.println(&quot;You forget to eat your apple, what will happen?&quot;); System.out.println(); int appleCount = apples.length; //.length number of rows int row = 0; //not included in for loop for (int i = 4; i &lt; appleCount &amp;&amp; i != -1; i--) //i != -1 because we want to stop the for loop after printing the fifth apple, and we starts with i = 4, so we need to stop when i is =-1 { System.out.println(&quot;The apple:&quot;); System.out.println(&quot; &quot;); for (int col = 0; col &lt; apples[row].length; col++) { // prints specific part of the apple from the column when row is 0/1/2/3/4 System.out.print(apples[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } row += 1; // print everything that&#39;s on row 1/2/3/4, which are Apple 1/2/3/4 System.out.println(); } //finishing messages System.out.println(&quot;This is the story of an uneaten apple.&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new AppleLoop().printPoem(); //a new apple list and output in one step } } AppleLoop.main(null); . You forget to eat your apple, what will happen? The apple: ,--./,-. / | | | | / `._,._,&#39; The apple: ,--./,-. / # | | | | / `._,._,&#39; The apple: ,--./,-. / # | | @ | | / `._,._,&#39; The apple: ,--|,-(~) / # )=) ( (_/ ) | / `._,._,&#39; The apple: ,--./,-. /,-._.--~| __} {__ |`-._,-`-, `._,._,&#39; This is the story of an uneaten apple. 0000000000000000000000000000000000 THE END . Print apples horizontally . /** * Class for apples: a 2D array of apples * As well as method to print the Poem */ class AppleLoop { String [][] apples; /** * Constructor initializes a 2D array of apples */ public AppleLoop() { //Storing Data in 2D arrays apples = new String[][]{ { &quot; ,--./,-. &quot;, //[0][0] &quot; ,--./,-. &quot;, //[0][1] &quot; ,--./,-. &quot;, //[0][2] &quot; ,--|,-(~) &quot;, //[0][3] &quot; ,--./,-. &quot; //[0][4] }, { &quot; / | &quot;, //[1][0] &quot; / # | &quot;, &quot; / # | &quot;, &quot; / # )=) &quot;, &quot; /,-._.--~| &quot; }, { &quot; | | &quot;, //[2][0] &quot; | | &quot;, &quot; | @ | &quot;, &quot; ( (_/ ) &quot;, &quot; __} {__ &quot; }, { &quot; | / &quot;, //[3][0] &quot; | / &quot;, &quot; | / &quot;, &quot; | / &quot;, &quot; |`-._,-`-, &quot; }, { &quot; `._,._,&#39; &quot;, //[4][0] &quot; `._,._,&#39; &quot;, &quot; `._,._,&#39; &quot;, &quot; `._,._,&#39; &quot;, &quot; `._,._,&#39; &quot; }, }; } public void printPoem() { System.out.println(); System.out.println(&quot;You forget to eat your apple, what will happen?&quot;); System.out.println(); System.out.println(&quot;The apple:&quot;); System.out.println(&quot; &quot;); int appleCount = apples.length; //.length number of rows int row = 0; //not included in for loop for (int i = 4; i &lt; appleCount &amp;&amp; i != -1; i--) { for (int col = 0; col &lt; apples[row].length; col++) { // prints specific part of the apple from the column System.out.print(apples[row][col] + &quot; &quot;); } row += 1; //printing second/third/fourth/fifth row System.out.println(); //break between each row } System.out.println(); // break between apples and the final messages //finishing messages System.out.println(&quot;This is the story of an uneaten apple.&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new AppleLoop().printPoem(); //a new apple list and output in one step } } AppleLoop.main(null); . You forget to eat your apple, what will happen? The apple: ,--./,-. ,--./,-. ,--./,-. ,--|,-(~) ,--./,-. / | / # | / # | / # )=) /,-._.--~| | | | | | @ | ( (_/ ) __} {__ | / | / | / | / |`-._,-`-, `._,._,&#39; `._,._,&#39; `._,._,&#39; `._,._,&#39; `._,._,&#39; This is the story of an uneaten apple. 0000000000000000000000000000000000 THE END . Display backwards . Apple 2 . /** * Class for apples: a 2D array of apples * As well as method to print the Poem */ class AppleLoop { String [][] apples; /** * Constructor initializes a 2D array of apples */ public AppleLoop() { //Storing Data in 2D arrays apples = new String[][]{ //Apple 0 { &quot; ,--./,-. &quot;, //[0][0] &quot; / | &quot;, //[0][1] &quot; | | &quot;, //[0][2] &quot; | / &quot;, //[0][3] &quot; `._,._,&#39; &quot; //[0][4] }, //Apple 1 { &quot; ,--./,-. &quot;, //[1][0] &quot; / # | &quot;, //[1][1] &quot; | | &quot;, //[1][2] &quot; | / &quot;, //[1][3] &quot; `._,._,&#39; &quot; //[1][4] }, //Apple 2 { &quot; ,--./,-. &quot;, &quot; / # | &quot;, &quot; | @ | &quot;, &quot; | / &quot;, &quot; `._,._,&#39; &quot; }, //Apple 3 { &quot; ,--|,-(~) &quot;, //[3][0] &quot; / # )=) &quot;, &quot; ( (_/ ) &quot;, &quot; | / &quot;, &quot; `._,._,&#39; &quot; }, //Apple 4 { &quot; ,--./,-. &quot;, //[4][0] &quot; /,-._.--~| &quot;, &quot; __} {__ &quot;, &quot; |`-._,-`-, &quot;, &quot; `._,._,&#39; &quot; }, }; } public void printPoem() { System.out.println(); System.out.println(&quot;You forget to eat your apple, what will happen?&quot;); System.out.println(); int appleCount = apples.length; //.length number of rows int appleNum = 1; for (int i = 4; i &lt; appleCount &amp;&amp; i != -1; i--) { System.out.println(&quot;The apple:&quot;); System.out.println(&quot; &quot;); for (int row = 0; row &lt; appleNum; row++) { //if appleNum += 1 once, then 0(row) &lt; 2(1+1), will print Apple 0 &amp; 1 for (int col = 0; col &lt; apples[row].length; col++) { // prints specific part of the apple from the column System.out.print(apples[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } System.out.println(); } appleNum += 1; } //finishing messages System.out.println(&quot;This is the story of an uneaten apple.&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new AppleLoop().printPoem(); //a new apple list and output in one step } } AppleLoop.main(null); . You forget to eat your apple, what will happen? The apple: ,--./,-. / | | | | / `._,._,&#39; The apple: ,--./,-. / | | | | / `._,._,&#39; ,--./,-. / # | | | | / `._,._,&#39; The apple: ,--./,-. / | | | | / `._,._,&#39; ,--./,-. / # | | | | / `._,._,&#39; ,--./,-. / # | | @ | | / `._,._,&#39; The apple: ,--./,-. / | | | | / `._,._,&#39; ,--./,-. / # | | | | / `._,._,&#39; ,--./,-. / # | | @ | | / `._,._,&#39; ,--|,-(~) / # )=) ( (_/ ) | / `._,._,&#39; The apple: ,--./,-. / | | | | / `._,._,&#39; ,--./,-. / # | | | | / `._,._,&#39; ,--./,-. / # | | @ | | / `._,._,&#39; ,--|,-(~) / # )=) ( (_/ ) | / `._,._,&#39; ,--./,-. /,-._.--~| __} {__ |`-._,-`-, `._,._,&#39; This is the story of an uneaten apple. 0000000000000000000000000000000000 THE END .",
            "url": "https://rebecca-123.github.io/blog_juiceVRLD/jupyter/2022/09/19/iteration_2dArray.html",
            "relUrl": "/jupyter/2022/09/19/iteration_2dArray.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Week 4 Team Presentation",
            "content": "FRQ Question 1 . Key Ideas . Creating methods The primary task of FRQ 1 is to write the code inside the method --&gt; this involves control structures. | . | Calling methods | Concepts Covered . Iteration (for loops) | Selection (conditionals - if/else if/else) | Notes/Strategies . Don&#39;t have to worry about method signature the method name, keywords, and output types are given | . | Use the given examples to test code For example, 2019 began on a Tuesday, and January 5 is the fifth day of 2019. As a result, January 5, 2019, fell on a Saturday, and the method call dayOfWeek(1, 5, 2019) returns 6. As another example, January 10 is the tenth day of 2019. As a result, January 10, 2019, fell on a Thursday, and the method call dayOfWeek(1, 10, 2019) returns 4. | It is a good idea to test the inputs and see if the program you wrote returns the expected results. This can prevent errors in writing the method due to calculation mistakes | . | . |",
            "url": "https://rebecca-123.github.io/blog_juiceVRLD/2022/09/15/week4.html",
            "relUrl": "/2022/09/15/week4.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://rebecca-123.github.io/blog_juiceVRLD/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://rebecca-123.github.io/blog_juiceVRLD/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://rebecca-123.github.io/blog_juiceVRLD/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://rebecca-123.github.io/blog_juiceVRLD/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}